# Generated by Django 3.2.13 on 2022-05-11 13:10

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_lessor', models.BooleanField(default=False)),
                ('is_tenant', models.BooleanField(default=False)),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. Enter a valid email address.', max_length=254, unique=True, verbose_name='email address')),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, error_messages={'incorrect': 'Incorrect mobile number.'}, max_length=128, region=None, verbose_name='mobile number')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=30, verbose_name='Отчество')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='uploads/', verbose_name='Аватарка пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['email'],
            },
            managers=[
                ('objects', users.models.BasicCustomerManager()),
            ],
        ),
        migrations.CreateModel(
            name='LessorProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='lessor_profile', serialize=False, to='users.basiccustomer')),
            ],
            options={
                'verbose_name': 'Профиль арендодателя',
                'verbose_name_plural': 'Профили арендодателей',
            },
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='tenant_profile', serialize=False, to='users.basiccustomer')),
            ],
            options={
                'verbose_name': 'Профиль арендатора',
                'verbose_name_plural': 'Профили арендаторов',
            },
        ),
    ]
